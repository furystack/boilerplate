# Node.js

# Build a general Node.js project with npm.
# Add steps that analyze code, save build artifacts, deploy, and more:
# https://docs.microsoft.com/azure/devops/pipelines/languages/javascript

trigger:
  - master
  - develop
  - feature/*
  - release/*

pool:
  vmImage: "ubuntu-latest"

jobs:
  - job: Install
    steps:
    - task: NodeTool@0
      inputs:
        versionSpec: "12.x"
      displayName: "Install Node.js"
    - script: yarn install
      displayName: "Yarn install"

  - job: Lint 
    steps:
        - script: yarn lint
        displayName: "Yarn Lint"

  - job: Service
    steps:
      - script: yarn workspace service build
        displayName: "Build service"
      - script: rm -rf $(System.DefaultWorkingDirectory)/service/node_modules
        displayName: "Cleanup Service package"
      - task: ArchiveFiles@1
        displayName: Compress Service artifacts
        inputs:
          archiveFile: $(System.DefaultWorkingDirectory)/service.zip
          rootFolder: $(System.DefaultWorkingDirectory)/service
          includeRootFolder: false
      - task: PublishBuildArtifacts@1
        displayName: Publish Service artifacts
        inputs:
          pathtoPublish: "$(System.DefaultWorkingDirectory)/service.zip"
          artifactName: service

          #   - script: yarn test
    #     displayName: 'Yarn test'
    #   - script: bash <(curl -s https://codecov.io/bash)
    #     displayName: 'Publish test results to Codecov'
    #
    #   - task: PublishCodeCoverageResults@1
    #     displayName: 'Publish test coverage results'
    #     inputs:
    #       codeCoverageTool: Cobertura
    #       summaryFileLocation: '$(System.DefaultWorkingDirectory)/coverage/*coverage.xml'
    #       reportDirectory: '$(System.DefaultWorkingDirectory)/coverage'
    #
    #   - task: PublishTestResults@2
    #     displayName: Publish test results
    #     condition: succeededOrFailed()
    #     inputs:
    #       testRunner: JUnit
    #       testResultsFiles: '$(System.DefaultWorkingDirectory)/coverage/junit.xml'
  - job: Frontend
    steps:
    - script: yarn workspace frontend build
      displayName: "Build Frontend"
    - task: ArchiveFiles@1
      displayName: Compress frontend artifacts
      inputs:
        archiveFile: $(System.DefaultWorkingDirectory)/frontend.zip
        rootFolder: "$(System.DefaultWorkingDirectory)/frontend/bundle"
        includeRootFolder: false

    - task: PublishBuildArtifacts@1
      displayName: Publish frontend bundle artifacts
      inputs:
        pathtoPublish: "$(System.DefaultWorkingDirectory)/frontend.zip"
        artifactName: frontend

